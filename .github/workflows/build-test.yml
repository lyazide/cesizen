name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]

jobs:
  Build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Rebecca151205
          POSTGRES_DB: cesizen
        ports:
          - 5432:5432
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: Set environment variable
        run: echo DATABASE_URL="postgresql://postgres:Rebecca151205@localhost:5432/cesizen?schema=public" >> $GITHUB_ENV
      - name: install dependencies
        run: npm clean-install
      - name: Apply Prisma migrations
        run: npx prisma migrate deploy
      - name: Verify Prisma schema (Optional)
        run: npx prisma db push # Ensure database schema is correct

      - name: Build
        run: npm run build
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - name: Save  cache (node_modules)
        id: cache-primes-save
        uses: actions/cache/save@v4
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}--node-modules-${{ hashFiles('**/package-lock.json') }} ##{ hashFiles('**/package-lock.json') }}
  Test_Api:
    runs-on: ubuntu-latest
    needs:
      - Build
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Restore cache (node_modules)
        id: cache-primes-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}--node-modules-${{ hashFiles('**/package-lock.json') }}
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: echo "🍏 This job's status is cuurently ${{ job.status }}."
      - name: run API tests
        run: npm test

  Test_Component:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, edge]
    needs:
      - Test_Api
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Restore cache (node_modules)
        id: cache-primes-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}--node-modules-${{ hashFiles('**/package-lock.json') }}

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - run: echo "🍏 This job's status is currently ${{ job.status }}."
      - uses: cypress-io/github-action@v6
        with:
          install: false
          start: npm run dev
          browser: ${{ matrix.browser }}
          component: true
          headed: false

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Download cypress test videos on ${{ github.run_id }}-${{ github.job }}-${{ matrix.browser }}
          path: cypress/videos/
          retention-days: 5
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: Download cypress test failed screenshots on ${{ github.run_id }}-${{ github.job }}-${{ matrix.browser }}
          path: cypress/screenshots/
          retention-days: 5

  Test_E2E:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, edge]
    needs:
      - Test_Component
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Restore cache (node_modules)
        id: cache-primes-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}--node-modules-${{ hashFiles('**/package-lock.json') }}

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - run: echo "🍏 This job's status is currently ${{ job.status }}."
      - uses: cypress-io/github-action@v6
        with:
          install: false
          start: npm run dev
          browser: ${{ matrix.browser }}

          e2e: true
          headed: false

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Download cypress test videos on ${{ github.run_id }}-${{ github.job }}-${{ matrix.browser }}

          path: cypress/videos/
          retention-days: 5
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: Download cypress test failed screenshots on ${{ github.run_id }}-${{ github.job }}-${{ matrix.browser }}
          path: cypress/screenshots/
          retention-days: 5

  build-and-push-image:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }}

  deploy-image:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    needs: [build-and-push-image, Test_Api]
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
          sudo docker compose -f docker-compose.prod.yml up -d --pull always"
